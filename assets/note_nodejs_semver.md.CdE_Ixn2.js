import{_ as e,c as t,o as s,a4 as a}from"./chunks/framework.CNeDCYXu.js";const k=JSON.parse('{"title":"semver","description":"","frontmatter":{},"headers":[],"relativePath":"note/nodejs/semver.md","filePath":"note/nodejs/semver.md"}'),r={name:"note/nodejs/semver.md"},o=a(`<h1 id="semver" tabindex="-1"><a href="https://www.npmjs.com/package/semver" target="_blank" rel="noreferrer">semver</a> <a class="header-anchor" href="#semver" aria-label="Permalink to &quot;[semver](https://www.npmjs.com/package/semver)&quot;">​</a></h1><p>语义化版本控制库，<a href="https://www.wuzao.com/document/30-seconds-of-code/js/semantic-versioning/" target="_blank" rel="noreferrer">详细解读参考</a></p><ol><li>安装</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> semver</span></span></code></pre></div><pre><code>{major}.{minor}.{patch}
</code></pre><p>每个组件代表对软件所做的特定类型的更改。</p><ul><li><strong>主要版本</strong>：重大更改，可能会<strong>破坏兼容性</strong>。开发人员在升级之前应仔细阅读文档并针对新版本测试其代码。</li><li><strong>次要版本</strong>：向后兼容的<strong>添加或改进</strong>，不会破坏与之前版本的兼容性。用户通常可以升级到新的次要版本，而不必担心可能需要修改代码的重大更改。</li><li><strong>补丁版本</strong>：向后兼容的<strong>错误修复、补丁或维护</strong>发布。补丁版本旨在安全，不应引入新功能或破坏性更改。</li></ul><p>以下表格总结了每个组件所代表的不同类型的更改：</p><table tabindex="0"><thead><tr><th>组件</th><th>更改类型</th><th>示例</th></tr></thead><tbody><tr><td>主要版本</td><td>不兼容</td><td>破坏性更改、重写、架构更改</td></tr><tr><td>次要版本</td><td>兼容</td><td>新功能、功能增强</td></tr><tr><td>补丁版本</td><td>兼容</td><td>错误修复、补丁、维护发布</td></tr></tbody></table><h2 id="发布和预发布版本" tabindex="-1">发布和预发布版本 <a class="header-anchor" href="#发布和预发布版本" aria-label="Permalink to &quot;发布和预发布版本&quot;">​</a></h2><p>软件包的<strong>第一个版本</strong>通常被标记为<code>1.0.0</code>。这是因为软件包的初始发布被认为是一个主要版本，而主要版本的第一个版本总是<code>1.0.0</code>。以<code>0.x.x</code>开头的版本被认为是预发布版本，不适用于生产环境。</p><p>此外，SemVer允许在版本号后附加<strong>预发布版本</strong>。这些版本由连字符和一系列字母数字标识符组成，例如<code>1.0.0-alpha.1</code>或<code>1.0.0-beta.2</code>。预发布版本通常用于表示软件仍在积极开发中，可能还不适用于生产环境。</p><h2 id="指定要使用的版本" tabindex="-1">指定要使用的版本 <a class="header-anchor" href="#指定要使用的版本" aria-label="Permalink to &quot;指定要使用的版本&quot;">​</a></h2><p>在安装软件包时，您可以通过将版本号附加到软件包名称来指定要使用的版本，如下所示：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-package@1.0.0</span></span></code></pre></div>`,15),n=[o];function i(d,l,h,p,c,g){return s(),t("div",null,n)}const _=e(r,[["render",i]]);export{k as __pageData,_ as default};
